AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stack 1: Deploy VPC with 3 public subnet, Security Group, S3, S3 Endpoint '

Parameters:
  LocalIp:
    Description:  Local IP address to limit workgroup opening
    Type: String

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'

  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: '10.0.0.1/20'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC

  RouteTablePublicSubnet1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  RouteTableAssociationPublicSubnet1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTablePublicSubnet1


  RouteTablePublicSubnet1InternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTablePublicSubnet1
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  NetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
  SubnetNetworkAclAssociationPublicSubnet1:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      NetworkAclId: !Ref NetworkAclPublic

  NetworkAclEntryInPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'

  NetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'

  WorkshopSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WorkshopSecurityGroup
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          CidrIp: !Join ['', [!Ref LocalIp, "/32"] ]
          FromPort: 22
          ToPort: 22
        - IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 9443
          ToPort: 9443
        - IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 8080
          ToPort: 8080
        - IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 8443
          ToPort: 8443
        - IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 12000
          ToPort: 12000
        - IpProtocol: "udp"
          CidrIp: "0.0.0.0/0"
          FromPort: 5353
          ToPort: 5353
        - IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 5353
          ToPort: 5353
        - IpProtocol: "udp"
          CidrIp: "0.0.0.0/0"
          FromPort: 53
          ToPort: 53
        - IpProtocol: "tcp"
          CidrIp: "0.0.0.0/0"
          FromPort: 53
          ToPort: 53
      
  WorkShopGroupInternalIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: -1
      SourceSecurityGroupId: !GetAtt WorkshopSecurityGroup.GroupId     
      GroupId: !GetAtt WorkshopSecurityGroup.GroupId     

  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument: {
            "Statement":[{
                "Effect":"Allow",
                "Principal": "*",
                "Action":"*",
                "Resource":"*"
            }]
        }
      RouteTableIds:
        - !Ref RouteTablePublicSubnet1
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcEndpointType: Gateway
      VpcId: !Ref VPC

Outputs:

  VpcId:
      Description: 'VPC Id'
      Value: !Ref VPC

  PublicSubnet1Id:
      Description: 'Public Subnet 1'
      Value: !Ref PublicSubnet1

  WorkshopSecurityGroup:
    Description: 'Security Group'
    Value: !Ref WorkshopSecurityGroup

